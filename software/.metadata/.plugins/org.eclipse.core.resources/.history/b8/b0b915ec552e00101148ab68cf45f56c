#include <stdint.h>
#include <stdio.h>

#define AES_BASE_ADDR    0x00030400

#define AES_INPUT0       (*(volatile uint32_t *)(AES_BASE_ADDR + 0x00))
#define AES_INPUT1       (*(volatile uint32_t *)(AES_BASE_ADDR + 0x04))
#define AES_INPUT2       (*(volatile uint32_t *)(AES_BASE_ADDR + 0x08))
#define AES_INPUT3       (*(volatile uint32_t *)(AES_BASE_ADDR + 0x0C))

#define AES_KEY0         (*(volatile uint32_t *)(AES_BASE_ADDR + 0x10))
#define AES_KEY1         (*(volatile uint32_t *)(AES_BASE_ADDR + 0x14))
#define AES_KEY2         (*(volatile uint32_t *)(AES_BASE_ADDR + 0x18))
#define AES_KEY3         (*(volatile uint32_t *)(AES_BASE_ADDR + 0x1C))

#define AES_OUTPUT0      (*(volatile uint32_t *)(AES_BASE_ADDR + 0x20))
#define AES_OUTPUT1      (*(volatile uint32_t *)(AES_BASE_ADDR + 0x24))
#define AES_OUTPUT2      (*(volatile uint32_t *)(AES_BASE_ADDR + 0x28))
#define AES_OUTPUT3      (*(volatile uint32_t *)(AES_BASE_ADDR + 0x2C))

void delay_ms(uint32_t ms) {
    volatile uint32_t count;
    for (uint32_t i = 0; i < ms; i++) {
        count = 50000; // Adjust this value for your clock speed
        while (count--) {
            __asm__ volatile ("nop");
        }
    }
}

void aes_encrypt(uint32_t input[4], uint32_t key[4], uint32_t output[4]) {
    AES_KEY0 = key[0];
    AES_KEY1 = key[1];
    AES_KEY2 = key[2];
    AES_KEY3 = key[3];

    AES_INPUT0 = input[0];
    AES_INPUT1 = input[1];
    AES_INPUT2 = input[2];
    AES_INPUT3 = input[3];

    delay_ms(100);  // 1 second

    output[0] = AES_OUTPUT0;
    output[1] = AES_OUTPUT1;
    output[2] = AES_OUTPUT2;
    output[3] = AES_OUTPUT3;
}


int main() {
    uint32_t key[4] = {
        0x00010203,
        0x04050607,
        0x08090a0b,
        0x0c0d0e0f
    };
    
    uint32_t plaintext[4] = {
        0x00112233,
        0x44556677,
        0x8899aabb,
        0xccddeeff
    };

    uint32_t ciphertext[4];

    printf("Encrypting 128-bit plaintext using AES...\n");

    aes_encrypt(plaintext, key, ciphertext);

    printf("Plaintext:\n");
    for (int i = 0; i < 4; i++) {
        printf("%08lX ", plaintext[i]);
    }
    printf("\n");

    printf("Key:\n");
    for (int i = 0; i < 4; i++) {
        printf("%08lX ", key[i]);
    }
    printf("\n");

    printf("Actual ciphertext:\n");
    for (int i = 0; i < 4; i++) {
        printf("%08lX ", ciphertext[i]);
    }
    printf("\n");

    printf("Expected ciphertext:\n");
    printf("69c4e0d86a7b0430d8cdb78070b4c55a\n");
    printf("AES encryption completed.\n");

    return 0;
}
